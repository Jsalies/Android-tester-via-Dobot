
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'digit lbracket rbracket separator move touch wait scroll returncommande : bouger commande\n                     | bouger\n                     | attendre commande\n                     | attendre\n                     | toucher commande\n                     | toucher\n                     | scroller commande\n                     | scroller\n                     | retourner commande\n                     | retourner\n                      bouger : move lbracket digit separator digit rbracket toucher : touch lbracket rbracket\n                        | touch\n                         attendre : wait lbracket digit rbracket scroller : scroll lbracket digit separator digit separator digit separator digit rbracket retourner : return'
    
_lr_action_items = {'move':([0,2,3,4,5,6,9,11,23,26,30,35,],[7,7,7,7,7,7,-13,-16,-12,-14,-11,-15,]),'wait':([0,2,3,4,5,6,9,11,23,26,30,35,],[8,8,8,8,8,8,-13,-16,-12,-14,-11,-15,]),'touch':([0,2,3,4,5,6,9,11,23,26,30,35,],[9,9,9,9,9,9,-13,-16,-12,-14,-11,-15,]),'scroll':([0,2,3,4,5,6,9,11,23,26,30,35,],[10,10,10,10,10,10,-13,-16,-12,-14,-11,-15,]),'return':([0,2,3,4,5,6,9,11,23,26,30,35,],[11,11,11,11,11,11,-13,-16,-12,-14,-11,-15,]),'$end':([1,2,3,4,5,6,9,11,12,13,14,15,16,23,26,30,35,],[0,-2,-4,-6,-8,-10,-13,-16,-1,-3,-5,-7,-9,-12,-14,-11,-15,]),'lbracket':([7,8,9,10,],[17,18,19,20,]),'digit':([17,18,20,25,27,31,33,],[21,22,24,28,29,32,34,]),'rbracket':([19,22,28,34,],[23,26,30,35,]),'separator':([21,24,29,32,],[25,27,31,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'commande':([0,2,3,4,5,6,],[1,12,13,14,15,16,]),'bouger':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'attendre':([0,2,3,4,5,6,],[3,3,3,3,3,3,]),'toucher':([0,2,3,4,5,6,],[4,4,4,4,4,4,]),'scroller':([0,2,3,4,5,6,],[5,5,5,5,5,5,]),'retourner':([0,2,3,4,5,6,],[6,6,6,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> commande","S'",1,None,None,None),
  ('commande -> bouger commande','commande',2,'p_move','robot.py',70),
  ('commande -> bouger','commande',1,'p_move','robot.py',71),
  ('commande -> attendre commande','commande',2,'p_move','robot.py',72),
  ('commande -> attendre','commande',1,'p_move','robot.py',73),
  ('commande -> toucher commande','commande',2,'p_move','robot.py',74),
  ('commande -> toucher','commande',1,'p_move','robot.py',75),
  ('commande -> scroller commande','commande',2,'p_move','robot.py',76),
  ('commande -> scroller','commande',1,'p_move','robot.py',77),
  ('commande -> retourner commande','commande',2,'p_move','robot.py',78),
  ('commande -> retourner','commande',1,'p_move','robot.py',79),
  ('bouger -> move lbracket digit separator digit rbracket','bouger',6,'p_bouger','robot.py',83),
  ('toucher -> touch lbracket rbracket','toucher',3,'p_toucher','robot.py',89),
  ('toucher -> touch','toucher',1,'p_toucher','robot.py',90),
  ('attendre -> wait lbracket digit rbracket','attendre',4,'p_attendre','robot.py',96),
  ('scroller -> scroll lbracket digit separator digit separator digit separator digit rbracket','scroller',10,'p_scroller','robot.py',101),
  ('retourner -> return','retourner',1,'p_retourner','robot.py',107),
]
