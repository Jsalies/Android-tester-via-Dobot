
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'digit lbracket rbracket separator move touch wait scroll returncommande : bouger commande\n                     | bouger\n                     | attendre commande\n                     | attendre\n                     | toucher commande\n                     | toucher\n                     | scroller commande\n                     | scroller\n                     | retourner commande\n                     | retourner\n\n                      bouger : move lbracket digit separator digit rbracket toucher : touch lbracket rbracket\n                        | touch\n                         attendre : wait lbracket digit rbracket scroller : scroll lbracket digit separator digit separator digit separator digit rbracket retourner : return'
    
_lr_action_items = {'digit':([14,19,20,25,26,31,33,],[21,23,24,28,29,32,34,]),'return':([0,1,2,3,5,7,8,9,22,27,30,35,],[2,2,-16,2,2,-13,2,2,-12,-14,-11,-15,]),'move':([0,1,2,3,5,7,8,9,22,27,30,35,],[4,4,-16,4,4,-13,4,4,-12,-14,-11,-15,]),'lbracket':([4,7,10,11,],[14,16,19,20,]),'separator':([21,23,29,32,],[25,26,31,33,]),'touch':([0,1,2,3,5,7,8,9,22,27,30,35,],[7,7,-16,7,7,-13,7,7,-12,-14,-11,-15,]),'rbracket':([16,24,28,34,],[22,27,30,35,]),'wait':([0,1,2,3,5,7,8,9,22,27,30,35,],[11,11,-16,11,11,-13,11,11,-12,-14,-11,-15,]),'scroll':([0,1,2,3,5,7,8,9,22,27,30,35,],[10,10,-16,10,10,-13,10,10,-12,-14,-11,-15,]),'$end':([1,2,3,5,6,7,8,9,12,13,15,17,18,22,27,30,35,],[-6,-16,-8,-2,0,-13,-10,-4,-5,-7,-1,-9,-3,-12,-14,-11,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'toucher':([0,1,3,5,8,9,],[1,1,1,1,1,1,]),'scroller':([0,1,3,5,8,9,],[3,3,3,3,3,3,]),'bouger':([0,1,3,5,8,9,],[5,5,5,5,5,5,]),'commande':([0,1,3,5,8,9,],[6,12,13,15,17,18,]),'retourner':([0,1,3,5,8,9,],[8,8,8,8,8,8,]),'attendre':([0,1,3,5,8,9,],[9,9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> commande","S'",1,None,None,None),
  ('commande -> bouger commande','commande',2,'p_move','robot.py',71),
  ('commande -> bouger','commande',1,'p_move','robot.py',72),
  ('commande -> attendre commande','commande',2,'p_move','robot.py',73),
  ('commande -> attendre','commande',1,'p_move','robot.py',74),
  ('commande -> toucher commande','commande',2,'p_move','robot.py',75),
  ('commande -> toucher','commande',1,'p_move','robot.py',76),
  ('commande -> scroller commande','commande',2,'p_move','robot.py',77),
  ('commande -> scroller','commande',1,'p_move','robot.py',78),
  ('commande -> retourner commande','commande',2,'p_move','robot.py',79),
  ('commande -> retourner','commande',1,'p_move','robot.py',80),
  ('bouger -> move lbracket digit separator digit rbracket','bouger',6,'p_bouger','robot.py',85),
  ('toucher -> touch lbracket rbracket','toucher',3,'p_toucher','robot.py',92),
  ('toucher -> touch','toucher',1,'p_toucher','robot.py',93),
  ('attendre -> wait lbracket digit rbracket','attendre',4,'p_attendre','robot.py',100),
  ('scroller -> scroll lbracket digit separator digit separator digit separator digit rbracket','scroller',10,'p_scroller','robot.py',106),
  ('retourner -> return','retourner',1,'p_retourner','robot.py',113),
]
